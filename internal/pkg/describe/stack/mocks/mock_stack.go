// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/describe/stack/stack.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	cloudformation "github.com/aws/copilot-cli/internal/pkg/aws/cloudformation"
	gomock "github.com/golang/mock/gomock"
)

// Mockcfn is a mock of cfn interface.
type Mockcfn struct {
	ctrl     *gomock.Controller
	recorder *MockcfnMockRecorder
}

// MockcfnMockRecorder is the mock recorder for Mockcfn.
type MockcfnMockRecorder struct {
	mock *Mockcfn
}

// NewMockcfn creates a new mock instance.
func NewMockcfn(ctrl *gomock.Controller) *Mockcfn {
	mock := &Mockcfn{ctrl: ctrl}
	mock.recorder = &MockcfnMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mockcfn) EXPECT() *MockcfnMockRecorder {
	return m.recorder
}

// Describe mocks base method.
func (m *Mockcfn) Describe(name string) (*cloudformation.StackDescription, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Describe", name)
	ret0, _ := ret[0].(*cloudformation.StackDescription)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Describe indicates an expected call of Describe.
func (mr *MockcfnMockRecorder) Describe(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Describe", reflect.TypeOf((*Mockcfn)(nil).Describe), name)
}

// Metadata mocks base method.
func (m *Mockcfn) Metadata(opt cloudformation.MetadataOpts) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Metadata", opt)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Metadata indicates an expected call of Metadata.
func (mr *MockcfnMockRecorder) Metadata(opt interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Metadata", reflect.TypeOf((*Mockcfn)(nil).Metadata), opt)
}

// StackResources mocks base method.
func (m *Mockcfn) StackResources(name string) ([]*cloudformation.StackResource, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StackResources", name)
	ret0, _ := ret[0].([]*cloudformation.StackResource)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// StackResources indicates an expected call of StackResources.
func (mr *MockcfnMockRecorder) StackResources(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StackResources", reflect.TypeOf((*Mockcfn)(nil).StackResources), name)
}
