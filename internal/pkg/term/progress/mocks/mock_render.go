// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/term/progress/render.go

// Package mocks is a generated GoMock package.
package mocks

import (
	io "io"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRenderer is a mock of Renderer interface.
type MockRenderer struct {
	ctrl     *gomock.Controller
	recorder *MockRendererMockRecorder
}

// MockRendererMockRecorder is the mock recorder for MockRenderer.
type MockRendererMockRecorder struct {
	mock *MockRenderer
}

// NewMockRenderer creates a new mock instance.
func NewMockRenderer(ctrl *gomock.Controller) *MockRenderer {
	mock := &MockRenderer{ctrl: ctrl}
	mock.recorder = &MockRendererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRenderer) EXPECT() *MockRendererMockRecorder {
	return m.recorder
}

// Render mocks base method.
func (m *MockRenderer) Render(out io.Writer) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Render", out)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Render indicates an expected call of Render.
func (mr *MockRendererMockRecorder) Render(out interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Render", reflect.TypeOf((*MockRenderer)(nil).Render), out)
}

// MockDynamicRenderer is a mock of DynamicRenderer interface.
type MockDynamicRenderer struct {
	ctrl     *gomock.Controller
	recorder *MockDynamicRendererMockRecorder
}

// MockDynamicRendererMockRecorder is the mock recorder for MockDynamicRenderer.
type MockDynamicRendererMockRecorder struct {
	mock *MockDynamicRenderer
}

// NewMockDynamicRenderer creates a new mock instance.
func NewMockDynamicRenderer(ctrl *gomock.Controller) *MockDynamicRenderer {
	mock := &MockDynamicRenderer{ctrl: ctrl}
	mock.recorder = &MockDynamicRendererMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDynamicRenderer) EXPECT() *MockDynamicRendererMockRecorder {
	return m.recorder
}

// Done mocks base method.
func (m *MockDynamicRenderer) Done() <-chan struct{} {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Done")
	ret0, _ := ret[0].(<-chan struct{})
	return ret0
}

// Done indicates an expected call of Done.
func (mr *MockDynamicRendererMockRecorder) Done() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Done", reflect.TypeOf((*MockDynamicRenderer)(nil).Done))
}

// Render mocks base method.
func (m *MockDynamicRenderer) Render(out io.Writer) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Render", out)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Render indicates an expected call of Render.
func (mr *MockDynamicRendererMockRecorder) Render(out interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Render", reflect.TypeOf((*MockDynamicRenderer)(nil).Render), out)
}
